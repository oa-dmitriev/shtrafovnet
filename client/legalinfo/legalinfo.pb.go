// Code generated by protoc-gen-go. DO NOT EDIT.
// source: legalinfo.proto

package legalinfo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Inn struct {
	INN                  string   `protobuf:"bytes,1,opt,name=INN,proto3" json:"INN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inn) Reset()         { *m = Inn{} }
func (m *Inn) String() string { return proto.CompactTextString(m) }
func (*Inn) ProtoMessage()    {}
func (*Inn) Descriptor() ([]byte, []int) {
	return fileDescriptor_db342fe341df8d44, []int{0}
}

func (m *Inn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inn.Unmarshal(m, b)
}
func (m *Inn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inn.Marshal(b, m, deterministic)
}
func (m *Inn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inn.Merge(m, src)
}
func (m *Inn) XXX_Size() int {
	return xxx_messageInfo_Inn.Size(m)
}
func (m *Inn) XXX_DiscardUnknown() {
	xxx_messageInfo_Inn.DiscardUnknown(m)
}

var xxx_messageInfo_Inn proto.InternalMessageInfo

func (m *Inn) GetINN() string {
	if m != nil {
		return m.INN
	}
	return ""
}

type Info struct {
	CompanyName          string   `protobuf:"bytes,1,opt,name=CompanyName,proto3" json:"CompanyName,omitempty"`
	CeoName              string   `protobuf:"bytes,2,opt,name=CeoName,proto3" json:"CeoName,omitempty"`
	INN                  string   `protobuf:"bytes,3,opt,name=INN,proto3" json:"INN,omitempty"`
	KPP                  string   `protobuf:"bytes,4,opt,name=KPP,proto3" json:"KPP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_db342fe341df8d44, []int{1}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *Info) GetCeoName() string {
	if m != nil {
		return m.CeoName
	}
	return ""
}

func (m *Info) GetINN() string {
	if m != nil {
		return m.INN
	}
	return ""
}

func (m *Info) GetKPP() string {
	if m != nil {
		return m.KPP
	}
	return ""
}

func init() {
	proto.RegisterType((*Inn)(nil), "legalinfo.Inn")
	proto.RegisterType((*Info)(nil), "legalinfo.Info")
}

func init() { proto.RegisterFile("legalinfo.proto", fileDescriptor_db342fe341df8d44) }

var fileDescriptor_db342fe341df8d44 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x49, 0x4d, 0x4f,
	0xcc, 0xc9, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x48,
	0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5, 0xe5,
	0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0x15, 0x43, 0x14, 0x2a, 0x89, 0x73, 0x31, 0x7b, 0xe6, 0xe5,
	0x09, 0x09, 0x70, 0x31, 0x7b, 0xfa, 0xf9, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98,
	0x4a, 0x69, 0x5c, 0x2c, 0x9e, 0x79, 0x69, 0xf9, 0x42, 0x0a, 0x5c, 0xdc, 0xce, 0xf9, 0xb9, 0x05,
	0x89, 0x79, 0x95, 0x7e, 0x89, 0xb9, 0xa9, 0x50, 0x15, 0xc8, 0x42, 0x42, 0x12, 0x5c, 0xec, 0xce,
	0xa9, 0xf9, 0x60, 0x59, 0x26, 0xb0, 0x2c, 0x8c, 0x0b, 0x33, 0x95, 0x19, 0x6e, 0x2a, 0x48, 0xc4,
	0x3b, 0x20, 0x40, 0x82, 0x05, 0x22, 0xe2, 0x1d, 0x10, 0x60, 0x14, 0xca, 0x25, 0xe0, 0x03, 0x72,
	0x2b, 0xc8, 0x32, 0xb7, 0xd4, 0x92, 0xe4, 0x8c, 0xd4, 0x22, 0x21, 0x47, 0x2e, 0x1e, 0xf7, 0xd4,
	0x12, 0x90, 0x88, 0x53, 0x25, 0xc8, 0x75, 0x7c, 0x7a, 0x08, 0xff, 0x79, 0xe6, 0xe5, 0x49, 0xf1,
	0xa3, 0xf0, 0xd3, 0xf2, 0x95, 0x04, 0x9a, 0x2e, 0x3f, 0x99, 0xcc, 0xc4, 0xa5, 0xc4, 0xaa, 0x0f,
	0x12, 0xb3, 0x62, 0xd4, 0x4a, 0x62, 0x03, 0x7b, 0xcf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x51,
	0x0a, 0xe8, 0x96, 0x1a, 0x01, 0x00, 0x00,
}
